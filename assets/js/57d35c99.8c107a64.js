"use strict";(self.webpackChunkk_3_s_docs=self.webpackChunkk_3_s_docs||[]).push([[3502],{7052:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"security/secrets-encryption","title":"Secrets Encryption","description":"K3s supports enabling secrets encryption at rest. When first starting the server, passing the flag --secrets-encryption will do the following automatically:","source":"@site/docs/security/secrets-encryption.md","sourceDirName":"security","slug":"/security/secrets-encryption","permalink":"/security/secrets-encryption","draft":false,"unlisted":false,"editUrl":"https://github.com/k3s-io/docs/edit/main/docs/security/secrets-encryption.md","tags":[],"version":"current","lastUpdatedAt":1750837903000,"frontMatter":{"title":"Secrets Encryption"},"sidebar":"mySidebar","previous":{"title":"Security","permalink":"/security/"},"next":{"title":"CIS Hardening Guide","permalink":"/security/hardening-guide"}}');var r=i(4848),s=i(8453);const c={title:"Secrets Encryption"},o="Secrets Encryption Config",l={},d=[{value:"Choosing Encryption Provider",id:"choosing-encryption-provider",level:2},{value:"Generated encryption config file",id:"generated-encryption-config-file",level:2},{value:"Secrets Encryption Tool",id:"secrets-encryption-tool",level:2}];function a(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"secrets-encryption-config",children:"Secrets Encryption Config"})}),"\n",(0,r.jsxs)(n.p,{children:["K3s supports enabling secrets encryption at rest. When first starting the server, passing the flag ",(0,r.jsx)(n.code,{children:"--secrets-encryption"})," will do the following automatically:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Generate an AES-CBC key"}),"\n",(0,r.jsx)(n.li,{children:"Generate an encryption config file with the generated key"}),"\n",(0,r.jsx)(n.li,{children:"Pass the config to the KubeAPI as encryption-provider-config"}),"\n"]}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsx)(n.mdxAdmonitionTitle,{}),(0,r.jsxs)(n.p,{children:["Secrets-encryption cannot be enabled on an existing server without restarting it.",(0,r.jsx)(n.br,{}),"\n","Use ",(0,r.jsx)(n.code,{children:"curl -sfL https://get.k3s.io | sh -s - server --secrets-encryption"})," if installing from script, or other methods described in ",(0,r.jsx)(n.a,{href:"/installation/configuration#configuration-with-install-script",children:"Configuration Options"}),"."]})]}),"\n",(0,r.jsx)(n.h2,{id:"choosing-encryption-provider",children:"Choosing Encryption Provider"}),"\n",(0,r.jsx)(n.admonition,{title:"Version Gate",type:"info",children:(0,r.jsx)(n.p,{children:"Available as of the April 2025 releases: v1.30.12+k3s1, v1.31.8+k3s1, v1.32.4+k3s1, v1.33.0+k3s1"})}),"\n",(0,r.jsxs)(n.p,{children:["Using the ",(0,r.jsx)(n.code,{children:"--secrets-encryption-provider"})," flag, you can choose which encryption provider to use. The default is ",(0,r.jsx)(n.code,{children:"aescbc"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"K3s supports the following encryption providers:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"aescbc"}),": AES-CBC with PKCS#7 padding"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"secretbox"}),": XSalsa20 and Poly1305"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"generated-encryption-config-file",children:"Generated encryption config file"}),"\n",(0,r.jsxs)(n.p,{children:["When you start the server with ",(0,r.jsx)(n.code,{children:"--secrets-encryption"}),", K3s will generate an encryption config file at ",(0,r.jsx)(n.code,{children:"/var/lib/rancher/k3s/server/cred/encryption-config.json"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Below is an example of the generated encryption config file with the default ",(0,r.jsx)(n.code,{children:"aescbc"})," provider:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "kind": "EncryptionConfiguration",\n  "apiVersion": "apiserver.config.k8s.io/v1",\n  "resources": [\n    {\n      "resources": [\n        "secrets"\n      ],\n      "providers": [\n        {\n          "aescbc": {\n            "keys": [\n              {\n                "name": "aescbckey",\n                "secret": "xxxxxxxxxxxxxxxxxxx"\n              }\n            ]\n          }\n        },\n        {\n          "identity": {}\n        }\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"secrets-encryption-tool",children:"Secrets Encryption Tool"}),"\n",(0,r.jsxs)(n.p,{children:["K3s contains a utility tool ",(0,r.jsx)(n.code,{children:"secrets-encrypt"}),", which enables automatic control over the following:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Disabling/Enabling secrets encryption"}),"\n",(0,r.jsx)(n.li,{children:"Adding new encryption keys"}),"\n",(0,r.jsx)(n.li,{children:"Rotating and deleting encryption keys"}),"\n",(0,r.jsx)(n.li,{children:"Reencrypting secrets"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["For more information, see the ",(0,r.jsxs)(n.a,{href:"/cli/secrets-encrypt",children:[(0,r.jsx)(n.code,{children:"k3s secrets-encrypt"})," command documentation"]}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>o});var t=i(6540);const r={},s=t.createContext(r);function c(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);