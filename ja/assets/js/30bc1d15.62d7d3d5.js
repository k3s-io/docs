"use strict";(self.webpackChunkk_3_s_docs=self.webpackChunkk_3_s_docs||[]).push([[1430],{55936:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>l});var t=s(50952),i=s(74848),r=s(28453);const o={title:"Sysbox Runtime With K3s",description:"Integrating sysbox runtime with k3s' containerd",authors:"husseingalal",tags:["runc","k3s","sysbox"],hide_table_of_contents:!0},a=void 0,c={authorsImageUrls:[void 0]},l=[{value:"Containerd and Runc",id:"containerd-and-runc",level:2},{value:"Sysbox Runtime",id:"sysbox-runtime",level:2},{value:"Sysbox-runc Containerd Integration",id:"sysbox-runc-containerd-integration",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.p,{children:"The K3s binary bundles all the components needed to run a production-ready, CNCF-conformant Kubernetes cluster including containerd, runc, kubelet, and more. In this post we will discuss how containerd communicates with OCI runtimes and will discuss adding another container runtime (Sysbox) to K3s and how it can be used to run system pods in your environment."}),"\n",(0,i.jsx)(e.h2,{id:"containerd-and-runc",children:"Containerd and Runc"}),"\n",(0,i.jsx)(e.p,{children:"First we need to talk briefly about how containerd works with runc. Containerd is a long running daemon that is responsible for:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Image Management"}),": Pulls and stores images from registries."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Container Management"}),": Manages the lifecycle of containers (create, start, stop, delete)."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Snapshot Management"}),": Uses snapshotters to manage the filesystem layers for containers."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Runtime Management"}),": Delegates the creation of containers to OCI-compatible runtimes like runc."]}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:["When you create a pod in Kubernetes, kubelet uses the CRI plugin implemented in containerd to request a ",(0,i.jsx)(e.strong,{children:"pod sandbox"})," (",(0,i.jsx)(e.code,{children:"RunPodSandbox"}),") and then container creation (",(0,i.jsx)(e.code,{children:"CreateContainer"}),"). Containerd then calls a ",(0,i.jsx)(e.code,{children:"shim"})," process that acts as a middleman between ",(0,i.jsx)(e.code,{children:"containerd"})," and the OCI runtime (for example ",(0,i.jsx)(e.code,{children:"runc"}),"). This shim process allows the container to keep running even if the containerd daemon crashes or restarts."]}),"\n",(0,i.jsxs)(e.p,{children:["The shim generates the OCI runtime bundle (",(0,i.jsx)(e.code,{children:"config.json"})," and ",(0,i.jsx)(e.code,{children:"rootfs"})," path) and then executes the runc binary. Runc reads the ",(0,i.jsx)(e.code,{children:"config.json"}),", sets up the container\u2019s namespaces and cgroups, and then launches the container process."]}),"\n",(0,i.jsxs)(e.p,{children:["Runc is the component that directly interfaces with the Linux kernel \u2014 configuring cgroups, namespaces, seccomp, capabilities, and mounts. After runc finishes creating the container, it ",(0,i.jsx)(e.strong,{children:"exits"}),", leaving the shim to manage the lifecycle and I/O of the container."]}),"\n",(0,i.jsx)(e.mermaid,{value:'graph TD\n    Kubelet["Kubelet<br/>(CRI)"]\n    Containerd["Containerd"]\n    Shim["Shim"]\n    Runtime["OCI Runtime<br/>(runc)"]\n    Container["Container"]\n\n    Kubelet --\x3e|"RunPodSandbox()\n    CreateContainer()"| Containerd\n    Containerd --\x3e|"Start/Stop Task"| Shim\n    Shim --\x3e|"Executes Container"| Runtime\n    Runtime --\x3e|"clone()\n    cgroupns()\n    setns()"| Container'}),"\n",(0,i.jsx)(e.h2,{id:"sysbox-runtime",children:"Sysbox Runtime"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"https://github.com/nestybox/sysbox",children:"Sysbox"}),' is an open-source, next-generation container runtime created by Nestybox. Unlike traditional runtimes (such as runc), Sysbox is designed to let you run "system containers". It primarily leverages ',(0,i.jsx)(e.strong,{children:"Linux user namespaces"})," and other features to provide containers that behave more like lightweight virtual machines."]}),"\n",(0,i.jsx)(e.p,{children:"This means you can run workloads like Docker, Systemd, containerd, or even K3s inside your pods \u2014 all without requiring privileged mode."}),"\n",(0,i.jsx)(e.p,{children:"In short, Sysbox bridges the gap between application containers and virtual machines, enabling use cases like running Kubernetes-in-Kubernetes (K8s-in-K8s), CI/CD pipelines that need full OS-like environments, or development sandboxes with VM-level isolation but container speed."}),"\n",(0,i.jsx)(e.admonition,{type:"info",children:(0,i.jsxs)(e.p,{children:["Currently, Sysbox officially supports ",(0,i.jsx)(e.strong,{children:"CRI-O"})," only. CRI-O has native support for Linux user namespaces, which Sysbox relies on. While containerd added user namespace support starting in version v2.0, there was a ",(0,i.jsx)(e.a,{href:"https://github.com/nestybox/sysbox/issues/958",children:"bug"})," in sysbox-runc that prevented it from working properly with Sysbox."]})}),"\n",(0,i.jsx)(e.h2,{id:"sysbox-runc-containerd-integration",children:"Sysbox-runc Containerd Integration"}),"\n",(0,i.jsxs)(e.p,{children:["After investigating this issue, I was able to locate the root cause, as explained in this ",(0,i.jsx)(e.a,{href:"https://github.com/nestybox/sysbox-runc/pull/106",children:"PR"}),". Containerd was failing to run a specific subcommand for sysbox-runc called ",(0,i.jsx)(e.code,{children:"features"}),", which led to the following error:"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'level=debug msg="failed to introspect features of runtime \\"sysbox-runc\\"" error="failed to unmarshal Features (*anypb.Any): type with url : not found"\n'})}),"\n",(0,i.jsxs)(e.p,{children:["Because of this, containerd instructed sysbox-runc to run containers ",(0,i.jsx)(e.strong,{children:"without user namespaces"}),", causing container creation to fail. The fix for this bug was recently merged in the ",(0,i.jsx)(e.code,{children:"sysbox-runc"})," repo, enabling containerd to work with sysbox-runc."]}),"\n",(0,i.jsx)(e.h1,{id:"running-sysbox-runc-with-k3s",children:"Running Sysbox-runc With K3S"}),"\n",(0,i.jsxs)(e.p,{children:["In order to run ",(0,i.jsx)(e.code,{children:"sysbox-runc"})," with K3s you need to have a running K3s cluster, and then you can proceed to install the latest version of sysbox, However, since the fix for containerd support hasn't yet been integrated to sysbox main repo only in ",(0,i.jsx)(e.code,{children:"sysbox-runc"}),", we need to build the binaries from source to get the latest updates."]}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Install docker in your system."}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Clone the repo and prepare the code"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"git clone --recursive https://github.com/nestybox/sysbox.git\n\ncd sysbox/sysbox-runc\n\ngit pull origin main\n\ncd ..\n\nmake IMAGE_BASE_DISTRO=ubuntu IMAGE_BASE_RELEASE=jammy sysbox-static\n"})}),"\n",(0,i.jsxs)(e.p,{children:["You can then copy the binaries built to ",(0,i.jsx)(e.code,{children:"/usr/bin"})," or if you are building on the same machine that you will run containerd you can just run:"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"make install\n"})}),"\n",(0,i.jsxs)(e.ol,{start:"3",children:["\n",(0,i.jsx)(e.li,{children:"Run sysbox binary"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"sysbox\n"})}),"\n",(0,i.jsxs)(e.ol,{start:"4",children:["\n",(0,i.jsx)(e.li,{children:"Create sysbox runc runtime class"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"apiVersion: node.k8s.io/v1\nhandler: sysbox-runc\nkind: RuntimeClass\nmetadata:\n  name: sysbox-runc\n"})}),"\n",(0,i.jsxs)(e.ol,{start:"5",children:["\n",(0,i.jsxs)(e.li,{children:["Add sysbox runc to containerd configuration, you can do that by creating ",(0,i.jsx)(e.code,{children:"/var/lib/rancher/k3s/agent/etc/containerd/config.toml.tmpl"}),":"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"[plugins.'io.containerd.cri.v1.runtime'.containerd.runtimes.sysbox-runc]\n  runtime_type = \"io.containerd.runc.v2\"\n\n[plugins.'io.containerd.cri.v1.runtime'.containerd.runtimes.sysbox-runc.options]\n  SystemdCgroup = false\n  BinaryName=\"/usr/bin/sysbox-runc\"\n"})}),"\n",(0,i.jsxs)(e.ol,{start:"6",children:["\n",(0,i.jsxs)(e.li,{children:["Finally you can create pod running with the runtime class for sysbox-runc and ",(0,i.jsx)(e.code,{children:"hostUsers: false"}),":"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'apiVersion: v1\nkind: Pod\nmetadata:\n  name: ubuntu\nspec:\n  runtimeClassName: sysbox-runc\n  hostUsers: false\n  containers:\n  - name: ubuntu2204\n    image: ubuntu:22.04\n    command: ["sleep", "40000000000"]\n  restartPolicy: Never\n'})}),"\n",(0,i.jsx)(e.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsx)(e.p,{children:"Sysbox brings a powerful capability to Kubernetes: the ability to run system-level workloads inside containers with strong isolation, without requiring privileged mode. When combined with K3s, this opens the door to new use cases such as:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Running Kubernetes-in-Kubernetes clusters for virtual clusters (",(0,i.jsx)(e.a,{href:"https://github.com/rancher/k3k",children:"k3k"}),")."]}),"\n",(0,i.jsx)(e.li,{children:"Creating secure developer sandboxes that behave like lightweight VMs."}),"\n",(0,i.jsx)(e.li,{children:"Running system daemons or nested container engines inside pods."}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:["While Sysbox is officially supported with CRI-O today, the recent fixes in ",(0,i.jsx)(e.code,{children:"sysbox-runc"}),' allow it to run on containerd as well \u2014 making it possible to integrate with K3s. The integration is still evolving, but it shows how the container ecosystem is moving beyond traditional app containers toward more flexible "system containers."']}),"\n",(0,i.jsx)(e.p,{children:"If you\u2019re experimenting with K3s and want to explore system workloads inside pods, Sysbox provides a compelling way to do so while maintaining Kubernetes-native workflows"})]})}function u(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},28453:(n,e,s)=>{s.d(e,{R:()=>o,x:()=>a});var t=s(96540);const i={},r=t.createContext(i);function o(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:o(n.components),t.createElement(r.Provider,{value:e},n.children)}},50952:n=>{n.exports=JSON.parse('{"permalink":"/ja/blog/2025/09/27/k3s-sysbox","source":"@site/blog/2025-09-27-k3s-sysbox.md","title":"Sysbox Runtime With K3s","description":"Integrating sysbox runtime with k3s\' containerd","date":"2025-09-27T00:00:00.000Z","tags":[{"inline":true,"label":"runc","permalink":"/ja/blog/tags/runc"},{"inline":true,"label":"k3s","permalink":"/ja/blog/tags/k-3-s"},{"inline":true,"label":"sysbox","permalink":"/ja/blog/tags/sysbox"}],"hasTruncateMarker":false,"authors":[{"title":"K3s maintainer","url":"https://github.com/galal-hussein","name":"Hussein Galal","imageURL":"https://github.com/galal-hussein.png","key":"husseingalal","page":null}],"frontMatter":{"title":"Sysbox Runtime With K3s","description":"Integrating sysbox runtime with k3s\' containerd","authors":"husseingalal","tags":["runc","k3s","sysbox"],"hide_table_of_contents":true},"unlisted":false,"nextItem":{"title":"Kubernetes v1.34 is out!","permalink":"/ja/blog/2025/08/30/K3s-1.34-release"}}')}}]);